= Swiss DTA payment file format

Ruby library for the Swiss DTA payment file format. See http://www.six-interbank-clearing.com/de/tkicch_index/tkicch_home/tkicch_standardization/tkicch_standardization_dta.htm?lang=1 for more Information.

The DTA documentation in PDF format can be found here: http://www.six-interbank-clearing.com/dl_tkicch_dta.pdf

== Status

Early alpha. All payments are supported. It lacks payment validations and extended documentation

== Installation

  gem install payment_dta --source http://gemcutter.org

== Usage
  require 'rubygems'
  require 'payment_dta'
  
  DTAFile.create("/tmp/dta_payment.dta") do |file|
    file << ESRPayment.new(esr_attributes)
    file << IBANPayment.new(iban_attributes)
  end

== TODOS
* Add validations
* Remove duplications in payment classes
* Document the code according to the English DTA spec
* Add API to generate a string instead of a file so that it can be used in a web application
* Move tests for generator from test unit to rspec

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but
   bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2009 Patrick Huesler. See LICENSE for details.
